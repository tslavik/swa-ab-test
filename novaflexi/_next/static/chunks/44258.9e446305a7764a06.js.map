{"version":3,"file":"static/chunks/44258.9e446305a7764a06.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/kk/_lib/formatDistance/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/kk/_lib/formatLong/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/kk/_lib/formatRelative/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/kk/_lib/localize/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/kk/_lib/match/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/kk/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    regular: {\n      one: '1 секундтан аз',\n      singularNominative: '{{count}} секундтан аз',\n      singularGenitive: '{{count}} секундтан аз',\n      pluralGenitive: '{{count}} секундтан аз'\n    },\n    future: {\n      one: 'бір секундтан кейін',\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  },\n  xSeconds: {\n    regular: {\n      singularNominative: '{{count}} секунд',\n      singularGenitive: '{{count}} секунд',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунд бұрын',\n      singularGenitive: '{{count}} секунд бұрын',\n      pluralGenitive: '{{count}} секунд бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  },\n  halfAMinute: function halfAMinute(options) {\n    if (options !== null && options !== void 0 && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return 'жарты минут ішінде';\n      } else {\n        return 'жарты минут бұрын';\n      }\n    }\n    return 'жарты минут';\n  },\n  lessThanXMinutes: {\n    regular: {\n      one: '1 минуттан аз',\n      singularNominative: '{{count}} минуттан аз',\n      singularGenitive: '{{count}} минуттан аз',\n      pluralGenitive: '{{count}} минуттан аз'\n    },\n    future: {\n      one: 'минуттан кем ',\n      singularNominative: '{{count}} минуттан кем',\n      singularGenitive: '{{count}} минуттан кем',\n      pluralGenitive: '{{count}} минуттан кем'\n    }\n  },\n  xMinutes: {\n    regular: {\n      singularNominative: '{{count}} минут',\n      singularGenitive: '{{count}} минут',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минут бұрын',\n      singularGenitive: '{{count}} минут бұрын',\n      pluralGenitive: '{{count}} минут бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} минуттан кейін',\n      singularGenitive: '{{count}} минуттан кейін',\n      pluralGenitive: '{{count}} минуттан кейін'\n    }\n  },\n  aboutXHours: {\n    regular: {\n      singularNominative: 'шамамен {{count}} сағат',\n      singularGenitive: 'шамамен {{count}} сағат',\n      pluralGenitive: 'шамамен {{count}} сағат'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} сағаттан кейін',\n      singularGenitive: 'шамамен {{count}} сағаттан кейін',\n      pluralGenitive: 'шамамен {{count}} сағаттан кейін'\n    }\n  },\n  xHours: {\n    regular: {\n      singularNominative: '{{count}} сағат',\n      singularGenitive: '{{count}} сағат',\n      pluralGenitive: '{{count}} сағат'\n    }\n  },\n  xDays: {\n    regular: {\n      singularNominative: '{{count}} күн',\n      singularGenitive: '{{count}} күн',\n      pluralGenitive: '{{count}} күн'\n    },\n    future: {\n      singularNominative: '{{count}} күннен кейін',\n      singularGenitive: '{{count}} күннен кейін',\n      pluralGenitive: '{{count}} күннен кейін'\n    }\n  },\n  aboutXWeeks: {\n    type: 'weeks',\n    one: 'шамамен 1 апта',\n    other: 'шамамен {{count}} апта'\n  },\n  xWeeks: {\n    type: 'weeks',\n    one: '1 апта',\n    other: '{{count}} апта'\n  },\n  aboutXMonths: {\n    regular: {\n      singularNominative: 'шамамен {{count}} ай',\n      singularGenitive: 'шамамен {{count}} ай',\n      pluralGenitive: 'шамамен {{count}} ай'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} айдан кейін',\n      singularGenitive: 'шамамен {{count}} айдан кейін',\n      pluralGenitive: 'шамамен {{count}} айдан кейін'\n    }\n  },\n  xMonths: {\n    regular: {\n      singularNominative: '{{count}} ай',\n      singularGenitive: '{{count}} ай',\n      pluralGenitive: '{{count}} ай'\n    }\n  },\n  aboutXYears: {\n    regular: {\n      singularNominative: 'шамамен {{count}} жыл',\n      singularGenitive: 'шамамен {{count}} жыл',\n      pluralGenitive: 'шамамен {{count}} жыл'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} жылдан кейін',\n      singularGenitive: 'шамамен {{count}} жылдан кейін',\n      pluralGenitive: 'шамамен {{count}} жылдан кейін'\n    }\n  },\n  xYears: {\n    regular: {\n      singularNominative: '{{count}} жыл',\n      singularGenitive: '{{count}} жыл',\n      pluralGenitive: '{{count}} жыл'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  },\n  overXYears: {\n    regular: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    }\n  },\n  almostXYears: {\n    regular: {\n      singularNominative: '{{count}} жылға жақын',\n      singularGenitive: '{{count}} жылға жақын',\n      pluralGenitive: '{{count}} жылға жақын'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  }\n};\nfunction declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one && count === 1) return scheme.one;\n  var rem10 = count % 10;\n  var rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\nvar formatDistance = function formatDistance(token, count, options) {\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'function') return tokenValue(options);\n  if (tokenValue.type === 'weeks') {\n    return count === 1 ? tokenValue.one : tokenValue.other.replace('{{count}}', String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      if (tokenValue.future) {\n        return declension(tokenValue.future, count);\n      } else {\n        return declension(tokenValue.regular, count) + ' кейін';\n      }\n    } else {\n      if (tokenValue.past) {\n        return declension(tokenValue.past, count);\n      } else {\n        return declension(tokenValue.regular, count) + ' бұрын';\n      }\n    }\n  } else {\n    return declension(tokenValue.regular, count);\n  }\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: \"EEEE, do MMMM y 'ж.'\",\n  long: \"do MMMM y 'ж.'\",\n  medium: \"d MMM y 'ж.'\",\n  short: 'dd.MM.yyyy'\n};\nvar timeFormats = {\n  full: 'H:mm:ss zzzz',\n  long: 'H:mm:ss z',\n  medium: 'H:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  any: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'any'\n  })\n};\nexport default formatLong;","import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['жексенбіде', 'дүйсенбіде', 'сейсенбіде', 'сәрсенбіде', 'бейсенбіде', 'жұмада', 'сенбіде'];\nfunction _lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'өткен \" + weekday + \" сағат' p'-де'\";\n}\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'\" + weekday + \" сағат' p'-де'\";\n}\nfunction _nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'келесі \" + weekday + \" сағат' p'-де'\";\n}\nvar formatRelativeLocale = {\n  lastWeek: function lastWeek(date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return _lastWeek(day);\n    }\n  },\n  yesterday: \"'кеше сағат' p'-де'\",\n  today: \"'бүгін сағат' p'-де'\",\n  tomorrow: \"'ертең сағат' p'-де'\",\n  nextWeek: function nextWeek(date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return _nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['б.з.д.', 'б.з.'],\n  abbreviated: ['б.з.д.', 'б.з.'],\n  wide: ['біздің заманымызға дейін', 'біздің заманымыз']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-ші тоқ.', '2-ші тоқ.', '3-ші тоқ.', '4-ші тоқ.'],\n  wide: ['1-ші тоқсан', '2-ші тоқсан', '3-ші тоқсан', '4-ші тоқсан']\n};\nvar monthValues = {\n  narrow: ['Қ', 'А', 'Н', 'С', 'М', 'М', 'Ш', 'Т', 'Қ', 'Қ', 'Қ', 'Ж'],\n  abbreviated: ['қаң', 'ақп', 'нау', 'сәу', 'мам', 'мау', 'шіл', 'там', 'қыр', 'қаз', 'қар', 'жел'],\n  wide: ['қаңтар', 'ақпан', 'наурыз', 'сәуір', 'мамыр', 'маусым', 'шілде', 'тамыз', 'қыркүйек', 'қазан', 'қараша', 'желтоқсан']\n};\nvar formattingMonthValues = {\n  narrow: ['Қ', 'А', 'Н', 'С', 'М', 'М', 'Ш', 'Т', 'Қ', 'Қ', 'Қ', 'Ж'],\n  abbreviated: ['қаң', 'ақп', 'нау', 'сәу', 'мам', 'мау', 'шіл', 'там', 'қыр', 'қаз', 'қар', 'жел'],\n  wide: ['қаңтар', 'ақпан', 'наурыз', 'сәуір', 'мамыр', 'маусым', 'шілде', 'тамыз', 'қыркүйек', 'қазан', 'қараша', 'желтоқсан']\n};\nvar dayValues = {\n  narrow: ['Ж', 'Д', 'С', 'С', 'Б', 'Ж', 'С'],\n  short: ['жс', 'дс', 'сс', 'ср', 'бс', 'жм', 'сб'],\n  abbreviated: ['жс', 'дс', 'сс', 'ср', 'бс', 'жм', 'сб'],\n  wide: ['жексенбі', 'дүйсенбі', 'сейсенбі', 'сәрсенбі', 'бейсенбі', 'жұма', 'сенбі']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'ТД',\n    pm: 'ТК',\n    midnight: 'түн ортасы',\n    noon: 'түс',\n    morning: 'таң',\n    afternoon: 'күндіз',\n    evening: 'кеш',\n    night: 'түн'\n  },\n  wide: {\n    am: 'ТД',\n    pm: 'ТК',\n    midnight: 'түн ортасы',\n    noon: 'түс',\n    morning: 'таң',\n    afternoon: 'күндіз',\n    evening: 'кеш',\n    night: 'түн'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'ТД',\n    pm: 'ТК',\n    midnight: 'түн ортасында',\n    noon: 'түс',\n    morning: 'таң',\n    afternoon: 'күн',\n    evening: 'кеш',\n    night: 'түн'\n  },\n  wide: {\n    am: 'ТД',\n    pm: 'ТК',\n    midnight: 'түн ортасында',\n    noon: 'түсте',\n    morning: 'таңертең',\n    afternoon: 'күндіз',\n    evening: 'кеште',\n    night: 'түнде'\n  }\n};\nvar suffixes = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n  var mod10 = number % 10;\n  var b = number >= 100 ? 100 : null;\n  var suffix = suffixes[number] || suffixes[mod10] || b && suffixes[b] || '';\n  return number + suffix;\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'any',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?(ші|шы))?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((б )?з\\.?\\s?д\\.?)/i,\n  abbreviated: /^((б )?з\\.?\\s?д\\.?)/i,\n  wide: /^(біздің заманымызға дейін|біздің заманымыз|біздің заманымыздан)/i\n};\nvar parseEraPatterns = {\n  any: [/^б/i, /^з/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?ші)? тоқ.?/i,\n  wide: /^[1234](-?ші)? тоқсан/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^(қ|а|н|с|м|мау|ш|т|қыр|қаз|қар|ж)/i,\n  abbreviated: /^(қаң|ақп|нау|сәу|мам|мау|шіл|там|қыр|қаз|қар|жел)/i,\n  wide: /^(қаңтар|ақпан|наурыз|сәуір|мамыр|маусым|шілде|тамыз|қыркүйек|қазан|қараша|желтоқсан)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^қ/i, /^а/i, /^н/i, /^с/i, /^м/i, /^м/i, /^ш/i, /^т/i, /^қ/i, /^қ/i, /^қ/i, /^ж/i],\n  abbreviated: [/^қаң/i, /^ақп/i, /^нау/i, /^сәу/i, /^мам/i, /^мау/i, /^шіл/i, /^там/i, /^қыр/i, /^қаз/i, /^қар/i, /^жел/i],\n  any: [/^қ/i, /^а/i, /^н/i, /^с/i, /^м/i, /^м/i, /^ш/i, /^т/i, /^қ/i, /^қ/i, /^қ/i, /^ж/i]\n};\nvar matchDayPatterns = {\n  narrow: /^(ж|д|с|с|б|ж|с)/i,\n  short: /^(жс|дс|сс|ср|бс|жм|сб)/i,\n  wide: /^(жексенбі|дүйсенбі|сейсенбі|сәрсенбі|бейсенбі|жұма|сенбі)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^ж/i, /^д/i, /^с/i, /^с/i, /^б/i, /^ж/i, /^с/i],\n  short: [/^жс/i, /^дс/i, /^сс/i, /^ср/i, /^бс/i, /^жм/i, /^сб/i],\n  any: [/^ж[ек]/i, /^д[үй]/i, /^сe[й]/i, /^сә[р]/i, /^б[ей]/i, /^ж[ұм]/i, /^се[н]/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^Т\\.?\\s?[ДК]\\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\\.?)/i,\n  wide: /^Т\\.?\\s?[ДК]\\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\\.?)/i,\n  any: /^Т\\.?\\s?[ДК]\\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\\.?)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^ТД/i,\n    pm: /^ТК/i,\n    midnight: /^түн орта/i,\n    noon: /^күндіз/i,\n    morning: /таң/i,\n    afternoon: /түс/i,\n    evening: /кеш/i,\n    night: /түн/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Kazakh locale.\n * @language Kazakh\n * @iso-639-2 kaz\n * @author Nikita Bayev [@drugoi]{@link https://github.com/drugoi}\n */\nvar locale = {\n  code: 'kk',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;"],"names":["isSameUTCWeek","dirtyDateLeft","dirtyDateRight","options","_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","dateLeftStartOfWeek","_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","dateRightStartOfWeek","getTime","formatDistanceLocale","lessThanXSeconds","regular","one","singularNominative","singularGenitive","pluralGenitive","future","xSeconds","past","halfAMinute","addSuffix","comparison","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","type","other","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","declension","scheme","count","rem10","rem100","replace","String","__webpack_exports__","token","tokenValue","formatLong","date","_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__","formats","full","long","medium","short","defaultWidth","time","dateTime","any","accusativeWeekdays","thisWeek","day","formatRelativeLocale","lastWeek","baseDate","getUTCDay","_lib_isSameUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_0__","yesterday","today","tomorrow","nextWeek","format","suffixes","localize","ordinalNumber","dirtyNumber","_options","number","Number","b","suffix","era","_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__","values","narrow","abbreviated","wide","quarter","argumentCallback","month","formattingValues","defaultFormattingWidth","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","match","_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__","matchPattern","parsePattern","valueCallback","value","parseInt","_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","index","locale","code","formatDistance","_lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__","formatRelative","_lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__","_lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__","_lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}