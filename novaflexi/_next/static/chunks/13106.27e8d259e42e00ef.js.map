{"version":3,"file":"static/chunks/13106.27e8d259e42e00ef.js","mappings":"8JAEe,SAAAA,EAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACb,GAAAC,EAAAC,CAAA,EAAY,EAAAC,WACd,IAAAC,EAA4B,GAAAC,EAAAH,CAAA,EAAcJ,EAAAE,GAC1CM,EAA6B,GAAAD,EAAAH,CAAA,EAAcH,EAAAC,GAC3C,OAAAI,EAAAG,OAAA,KAAAD,EAAAC,OAAA,EACA,+CCNAC,EAAA,wFACAC,EAAA,CACAC,SAAA,SAAAC,CAAA,CAAAC,CAAA,CAAAZ,CAAA,QACA,CAAQ,EAAAa,EAAAX,CAAA,EAAaS,EAAAC,EAAAZ,GACrB,kBAGA,aADAQ,CAAA,CAAAG,EAAAG,SAAA,IACA,YAFA,EAIAC,UAAA,mBACAC,MAAA,oBACAC,SAAA,iBACAC,SAAA,SAAAP,CAAA,CAAAC,CAAA,CAAAZ,CAAA,QACA,CAAQ,EAAAa,EAAAX,CAAA,EAAaS,EAAAC,EAAAZ,GACrB,kBAGA,aADAQ,CAAA,CAAAG,EAAAG,SAAA,IACA,YAFA,EAIAK,MAAA,GACA,CAQAC,CAAAA,EAAA,QAPA,SAAAC,CAAA,CAAAV,CAAA,CAAAC,CAAA,CAAAZ,CAAA,EACA,IAAAsB,EAAAb,CAAA,CAAAY,EAAA,OACA,mBAAAC,EACAA,EAAAX,EAAAC,EAAAZ,GAEAsB,CADA,AAEA","sources":["webpack://_N_E/../../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/lv/_lib/formatRelative/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar weekdays = ['svētdienā', 'pirmdienā', 'otrdienā', 'trešdienā', 'ceturtdienā', 'piektdienā', 'sestdienā'];\nvar formatRelativeLocale = {\n  lastWeek: function lastWeek(date, baseDate, options) {\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return \"eeee 'plkst.' p\";\n    }\n    var weekday = weekdays[date.getUTCDay()];\n    return \"'Pagājušā \" + weekday + \" plkst.' p\";\n  },\n  yesterday: \"'Vakar plkst.' p\",\n  today: \"'Šodien plkst.' p\",\n  tomorrow: \"'Rīt plkst.' p\",\n  nextWeek: function nextWeek(date, baseDate, options) {\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return \"eeee 'plkst.' p\";\n    }\n    var weekday = weekdays[date.getUTCDay()];\n    return \"'Nākamajā \" + weekday + \" plkst.' p\";\n  },\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;"],"names":["isSameUTCWeek","dirtyDateLeft","dirtyDateRight","options","_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","dateLeftStartOfWeek","_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","dateRightStartOfWeek","getTime","weekdays","formatRelativeLocale","lastWeek","date","baseDate","_lib_isSameUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_0__","getUTCDay","yesterday","today","tomorrow","nextWeek","other","__webpack_exports__","token","format"],"sourceRoot":""}