{"version":3,"file":"static/chunks/55594.b52599e55ff906fc.js","mappings":"oGAAA,SAAAA,EAAAC,CAAA,EACA,OAAAA,EAAAC,OAAA,wBACA,CACA,SAAAC,EAAAF,CAAA,EACA,OAAAA,EAAAC,OAAA,yBACA,CACA,SAAAE,EAAAH,CAAA,EACA,OAAAA,EAAAC,OAAA,oBACA,CAIA,SAAAG,EAAAJ,CAAA,EACA,OAAAA,EAAAC,OAAA,6BACA,CACA,SAAAI,EAAAL,CAAA,EACA,OAAAA,EAAAC,OAAA,oCACA,CACA,SAAAK,EAAAN,CAAA,EACA,OAAAA,EAAAC,OAAA,2BACA,QACA,IAAAM,EAAA,CACAC,iBAAA,CACAC,IAAA,eACAC,MAAA,0BACAC,YAAAZ,CACA,EACAa,SAAA,CACAH,IAAA,UACAC,MAAA,qBACAC,YAAAZ,CACA,EACAc,YAAA,CACAJ,IAAA,kBACAC,MAAA,kBACAC,YAAA,SAAAG,CAAA,EACA,uBACA,CACA,EACAC,iBAAA,CACAN,IAAA,gBACAC,MAAA,2BACAC,YAAAT,CACA,EACAc,SAAA,CACAP,IAAA,WACAC,MAAA,sBACAC,YAAAT,CACA,EACAe,YAAA,CACAR,IAAA,aACAC,MAAA,wBACAC,YAAAR,CACA,EACAe,OAAA,CACAT,IAAA,QACAC,MAAA,mBACAC,YAAAR,CACA,EACAgB,MAAA,CACAV,IAAA,cACAC,MAAA,4BACAC,YArDA,SAAAX,CAAA,EACA,OAAAA,EAAAC,OAAA,0BACA,CAoDA,EACAmB,YAAA,CACAX,IAAA,cACAC,MAAA,yBACAC,YAAAP,CACA,EACAiB,OAAA,CACAZ,IAAA,SACAC,MAAA,oBACAC,YAAAP,CACA,EACAkB,aAAA,CACAb,IAAA,gBACAC,MAAA,2BACAC,YAAAN,CACA,EACAkB,QAAA,CACAd,IAAA,WACAC,MAAA,sBACAC,YAAAN,CACA,EACAmB,YAAA,CACAf,IAAA,aACAC,MAAA,wBACAC,YAAAL,CACA,EACAmB,OAAA,CACAhB,IAAA,QACAC,MAAA,mBACAC,YAAAL,CACA,EACAoB,WAAA,CACAjB,IAAA,YACAC,MAAA,uBACAC,YAAAL,CACA,EACAqB,aAAA,CACAlB,IAAA,iBACAC,MAAA,4BACAC,YAAAL,CACA,CACA,CAaAsB,CAAAA,EAAA,QAZA,SAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAzB,CAAA,CAAAsB,EAAA,CACAI,EAAAH,IAAAA,EAAAE,EAAAvB,GAAA,CAAAuB,EAAAtB,KAAA,CAAAT,OAAA,aAAiFiC,OAAAJ,GAAA,QACjF,MAAAC,GAAAA,EAAAI,SAAA,CACA,EAAAC,UAAA,EAAAL,EAAAK,UAAA,GACAJ,EAAArB,WAAA,CAAAsB,GAAA,YAEAA,EAAA,SACA,CAEAA,CADA,AAEA","sources":["webpack://_N_E/../../node_modules/date-fns/esm/locale/fi/_lib/formatDistance/index.js","webpack://_N_E/<anon>"],"sourcesContent":["function futureSeconds(text) {\n  return text.replace(/sekuntia?/, 'sekunnin');\n}\nfunction futureMinutes(text) {\n  return text.replace(/minuuttia?/, 'minuutin');\n}\nfunction futureHours(text) {\n  return text.replace(/tuntia?/, 'tunnin');\n}\nfunction futureDays(text) {\n  return text.replace(/päivää?/, 'päivän');\n}\nfunction futureWeeks(text) {\n  return text.replace(/(viikko|viikkoa)/, 'viikon');\n}\nfunction futureMonths(text) {\n  return text.replace(/(kuukausi|kuukautta)/, 'kuukauden');\n}\nfunction futureYears(text) {\n  return text.replace(/(vuosi|vuotta)/, 'vuoden');\n}\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'alle sekunti',\n    other: 'alle {{count}} sekuntia',\n    futureTense: futureSeconds\n  },\n  xSeconds: {\n    one: 'sekunti',\n    other: '{{count}} sekuntia',\n    futureTense: futureSeconds\n  },\n  halfAMinute: {\n    one: 'puoli minuuttia',\n    other: 'puoli minuuttia',\n    futureTense: function futureTense(_text) {\n      return 'puolen minuutin';\n    }\n  },\n  lessThanXMinutes: {\n    one: 'alle minuutti',\n    other: 'alle {{count}} minuuttia',\n    futureTense: futureMinutes\n  },\n  xMinutes: {\n    one: 'minuutti',\n    other: '{{count}} minuuttia',\n    futureTense: futureMinutes\n  },\n  aboutXHours: {\n    one: 'noin tunti',\n    other: 'noin {{count}} tuntia',\n    futureTense: futureHours\n  },\n  xHours: {\n    one: 'tunti',\n    other: '{{count}} tuntia',\n    futureTense: futureHours\n  },\n  xDays: {\n    one: 'päivä',\n    other: '{{count}} päivää',\n    futureTense: futureDays\n  },\n  aboutXWeeks: {\n    one: 'noin viikko',\n    other: 'noin {{count}} viikkoa',\n    futureTense: futureWeeks\n  },\n  xWeeks: {\n    one: 'viikko',\n    other: '{{count}} viikkoa',\n    futureTense: futureWeeks\n  },\n  aboutXMonths: {\n    one: 'noin kuukausi',\n    other: 'noin {{count}} kuukautta',\n    futureTense: futureMonths\n  },\n  xMonths: {\n    one: 'kuukausi',\n    other: '{{count}} kuukautta',\n    futureTense: futureMonths\n  },\n  aboutXYears: {\n    one: 'noin vuosi',\n    other: 'noin {{count}} vuotta',\n    futureTense: futureYears\n  },\n  xYears: {\n    one: 'vuosi',\n    other: '{{count}} vuotta',\n    futureTense: futureYears\n  },\n  overXYears: {\n    one: 'yli vuosi',\n    other: 'yli {{count}} vuotta',\n    futureTense: futureYears\n  },\n  almostXYears: {\n    one: 'lähes vuosi',\n    other: 'lähes {{count}} vuotta',\n    futureTense: futureYears\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var tokenValue = formatDistanceLocale[token];\n  var result = count === 1 ? tokenValue.one : tokenValue.other.replace('{{count}}', String(count));\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return tokenValue.futureTense(result) + ' kuluttua';\n    } else {\n      return result + ' sitten';\n    }\n  }\n  return result;\n};\nexport default formatDistance;"],"names":["futureSeconds","text","replace","futureMinutes","futureHours","futureWeeks","futureMonths","futureYears","formatDistanceLocale","lessThanXSeconds","one","other","futureTense","xSeconds","halfAMinute","_text","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","__webpack_exports__","token","count","options","tokenValue","result","String","addSuffix","comparison"],"sourceRoot":""}