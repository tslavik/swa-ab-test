{"version":3,"file":"static/chunks/75497.5eb18c611d7901d8.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/mk/_lib/formatDistance/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/mk/_lib/formatLong/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/mk/_lib/formatRelative/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/mk/_lib/localize/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/mk/_lib/match/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/mk/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'помалку од секунда',\n    other: 'помалку од {{count}} секунди'\n  },\n  xSeconds: {\n    one: '1 секунда',\n    other: '{{count}} секунди'\n  },\n  halfAMinute: 'половина минута',\n  lessThanXMinutes: {\n    one: 'помалку од минута',\n    other: 'помалку од {{count}} минути'\n  },\n  xMinutes: {\n    one: '1 минута',\n    other: '{{count}} минути'\n  },\n  aboutXHours: {\n    one: 'околу 1 час',\n    other: 'околу {{count}} часа'\n  },\n  xHours: {\n    one: '1 час',\n    other: '{{count}} часа'\n  },\n  xDays: {\n    one: '1 ден',\n    other: '{{count}} дена'\n  },\n  aboutXWeeks: {\n    one: 'околу 1 недела',\n    other: 'околу {{count}} месеци'\n  },\n  xWeeks: {\n    one: '1 недела',\n    other: '{{count}} недели'\n  },\n  aboutXMonths: {\n    one: 'околу 1 месец',\n    other: 'околу {{count}} недели'\n  },\n  xMonths: {\n    one: '1 месец',\n    other: '{{count}} месеци'\n  },\n  aboutXYears: {\n    one: 'околу 1 година',\n    other: 'околу {{count}} години'\n  },\n  xYears: {\n    one: '1 година',\n    other: '{{count}} години'\n  },\n  overXYears: {\n    one: 'повеќе од 1 година',\n    other: 'повеќе од {{count}} години'\n  },\n  almostXYears: {\n    one: 'безмалку 1 година',\n    other: 'безмалку {{count}} години'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'за ' + result;\n    } else {\n      return 'пред ' + result;\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, dd MMMM yyyy',\n  long: 'dd MMMM yyyy',\n  medium: 'dd MMM yyyy',\n  short: 'dd/MM/yyyy'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  any: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'any'\n  })\n};\nexport default formatLong;","import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar weekdays = ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота'];\nfunction _lastWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'минатата \" + weekday + \" во' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'минатиот \" + weekday + \" во' p\";\n  }\n}\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'ова \" + weekday + \" вo' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'овој \" + weekday + \" вo' p\";\n  }\n}\nfunction _nextWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следната \" + weekday + \" вo' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следниот \" + weekday + \" вo' p\";\n  }\n}\nvar formatRelativeLocale = {\n  lastWeek: function lastWeek(date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return _lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера во' p\",\n  today: \"'денес во' p\",\n  tomorrow: \"'утре во' p\",\n  nextWeek: function nextWeek(date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return _nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['пр.н.е.', 'н.е.'],\n  abbreviated: ['пред н. е.', 'н. е.'],\n  wide: ['пред нашата ера', 'нашата ера']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-ви кв.', '2-ри кв.', '3-ти кв.', '4-ти кв.'],\n  wide: ['1-ви квартал', '2-ри квартал', '3-ти квартал', '4-ти квартал']\n};\nvar monthValues = {\n  abbreviated: ['јан', 'фев', 'мар', 'апр', 'мај', 'јун', 'јул', 'авг', 'септ', 'окт', 'ноем', 'дек'],\n  wide: ['јануари', 'февруари', 'март', 'април', 'мај', 'јуни', 'јули', 'август', 'септември', 'октомври', 'ноември', 'декември']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['не', 'по', 'вт', 'ср', 'че', 'пе', 'са'],\n  abbreviated: ['нед', 'пон', 'вто', 'сре', 'чет', 'пет', 'саб'],\n  wide: ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота']\n};\nvar dayPeriodValues = {\n  wide: {\n    am: 'претпладне',\n    pm: 'попладне',\n    midnight: 'полноќ',\n    noon: 'напладне',\n    morning: 'наутро',\n    afternoon: 'попладне',\n    evening: 'навечер',\n    night: 'ноќе'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + '-ви';\n      case 2:\n        return number + '-ри';\n      case 7:\n      case 8:\n        return number + '-ми';\n    }\n  }\n  return number + '-ти';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?[врмт][и])?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((пр)?н\\.?\\s?е\\.?)/i,\n  abbreviated: /^((пр)?н\\.?\\s?е\\.?)/i,\n  wide: /^(пред нашата ера|нашата ера)/i\n};\nvar parseEraPatterns = {\n  any: [/^п/i, /^н/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[врт]?и?)? кв.?/i,\n  wide: /^[1234](-?[врт]?и?)? квартал/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[нпвсч]/i,\n  short: /^(не|по|вт|ср|че|пе|са)/i,\n  abbreviated: /^(нед|пон|вто|сре|чет|пет|саб)/i,\n  wide: /^(недела|понеделник|вторник|среда|четврток|петок|сабота)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[аб]/i]\n};\nvar matchMonthPatterns = {\n  abbreviated: /^(јан|фев|мар|апр|мај|јун|јул|авг|сеп|окт|ноем|дек)/i,\n  wide: /^(јануари|февруари|март|април|мај|јуни|јули|август|септември|октомври|ноември|декември)/i\n};\nvar parseMonthPatterns = {\n  any: [/^ја/i, /^Ф/i, /^мар/i, /^ап/i, /^мај/i, /^јун/i, /^јул/i, /^ав/i, /^се/i, /^окт/i, /^но/i, /^де/i]\n};\nvar matchDayPeriodPatterns = {\n  any: /^(претп|попл|полноќ|утро|пладне|вечер|ноќ)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /претпладне/i,\n    pm: /попладне/i,\n    midnight: /полноќ/i,\n    noon: /напладне/i,\n    morning: /наутро/i,\n    afternoon: /попладне/i,\n    evening: /навечер/i,\n    night: /ноќе/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Macedonian locale.\n * @language Macedonian\n * @iso-639-2 mkd\n * @author Petar Vlahu [@vlahupetar]{@link https://github.com/vlahupetar}\n * @author Altrim Beqiri [@altrim]{@link https://github.com/altrim}\n */\nvar locale = {\n  code: 'mk',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;"],"names":["isSameUTCWeek","dirtyDateLeft","dirtyDateRight","options","_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","dateLeftStartOfWeek","_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","dateRightStartOfWeek","getTime","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","__webpack_exports__","token","count","result","tokenValue","replace","String","addSuffix","comparison","formatLong","date","_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__","formats","full","long","medium","short","defaultWidth","time","dateTime","any","weekdays","thisWeek","day","weekday","formatRelativeLocale","lastWeek","baseDate","getUTCDay","_lib_isSameUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_0__","_lastWeek","yesterday","today","tomorrow","nextWeek","_nextWeek","format","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__","values","narrow","abbreviated","wide","quarter","argumentCallback","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","match","_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__","matchPattern","parsePattern","valueCallback","value","parseInt","_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","index","locale","code","formatDistance","_lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__","formatRelative","_lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__","_lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__","_lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}