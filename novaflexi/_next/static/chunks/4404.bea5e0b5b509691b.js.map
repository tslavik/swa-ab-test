{"version":3,"file":"static/chunks/4404.bea5e0b5b509691b.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/date-fns/esm/locale/sk/_lib/formatDistance/index.js","webpack://_N_E/<anon>"],"sourcesContent":["function declensionGroup(scheme, count) {\n  if (count === 1 && scheme.one) {\n    return scheme.one;\n  }\n  if (count >= 2 && count <= 4 && scheme.twoFour) {\n    return scheme.twoFour;\n  }\n\n  // if count === null || count === 0 || count >= 5\n  return scheme.other;\n}\nfunction declension(scheme, count, time) {\n  var group = declensionGroup(scheme, count);\n  var finalText = group[time];\n  return finalText.replace('{{count}}', String(count));\n}\nfunction extractPreposition(token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition));\n  });\n  return result[0];\n}\nfunction prefixPreposition(preposition) {\n  var translation = '';\n  if (preposition === 'almost') {\n    translation = 'takmer';\n  }\n  if (preposition === 'about') {\n    translation = 'približne';\n  }\n  return translation.length > 0 ? translation + ' ' : '';\n}\nfunction suffixPreposition(preposition) {\n  var translation = '';\n  if (preposition === 'lessThan') {\n    translation = 'menej než';\n  }\n  if (preposition === 'over') {\n    translation = 'viac než';\n  }\n  return translation.length > 0 ? translation + ' ' : '';\n}\nfunction lowercaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\nvar formatDistanceLocale = {\n  xSeconds: {\n    one: {\n      present: 'sekunda',\n      past: 'sekundou',\n      future: 'sekundu'\n    },\n    twoFour: {\n      present: '{{count}} sekundy',\n      past: '{{count}} sekundami',\n      future: '{{count}} sekundy'\n    },\n    other: {\n      present: '{{count}} sekúnd',\n      past: '{{count}} sekundami',\n      future: '{{count}} sekúnd'\n    }\n  },\n  halfAMinute: {\n    other: {\n      present: 'pol minúty',\n      past: 'pol minútou',\n      future: 'pol minúty'\n    }\n  },\n  xMinutes: {\n    one: {\n      present: 'minúta',\n      past: 'minútou',\n      future: 'minútu'\n    },\n    twoFour: {\n      present: '{{count}} minúty',\n      past: '{{count}} minútami',\n      future: '{{count}} minúty'\n    },\n    other: {\n      present: '{{count}} minút',\n      past: '{{count}} minútami',\n      future: '{{count}} minút'\n    }\n  },\n  xHours: {\n    one: {\n      present: 'hodina',\n      past: 'hodinou',\n      future: 'hodinu'\n    },\n    twoFour: {\n      present: '{{count}} hodiny',\n      past: '{{count}} hodinami',\n      future: '{{count}} hodiny'\n    },\n    other: {\n      present: '{{count}} hodín',\n      past: '{{count}} hodinami',\n      future: '{{count}} hodín'\n    }\n  },\n  xDays: {\n    one: {\n      present: 'deň',\n      past: 'dňom',\n      future: 'deň'\n    },\n    twoFour: {\n      present: '{{count}} dni',\n      past: '{{count}} dňami',\n      future: '{{count}} dni'\n    },\n    other: {\n      present: '{{count}} dní',\n      past: '{{count}} dňami',\n      future: '{{count}} dní'\n    }\n  },\n  xWeeks: {\n    one: {\n      present: 'týždeň',\n      past: 'týždňom',\n      future: 'týždeň'\n    },\n    twoFour: {\n      present: '{{count}} týždne',\n      past: '{{count}} týždňami',\n      future: '{{count}} týždne'\n    },\n    other: {\n      present: '{{count}} týždňov',\n      past: '{{count}} týždňami',\n      future: '{{count}} týždňov'\n    }\n  },\n  xMonths: {\n    one: {\n      present: 'mesiac',\n      past: 'mesiacom',\n      future: 'mesiac'\n    },\n    twoFour: {\n      present: '{{count}} mesiace',\n      past: '{{count}} mesiacmi',\n      future: '{{count}} mesiace'\n    },\n    other: {\n      present: '{{count}} mesiacov',\n      past: '{{count}} mesiacmi',\n      future: '{{count}} mesiacov'\n    }\n  },\n  xYears: {\n    one: {\n      present: 'rok',\n      past: 'rokom',\n      future: 'rok'\n    },\n    twoFour: {\n      present: '{{count}} roky',\n      past: '{{count}} rokmi',\n      future: '{{count}} roky'\n    },\n    other: {\n      present: '{{count}} rokov',\n      past: '{{count}} rokmi',\n      future: '{{count}} rokov'\n    }\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var preposition = extractPreposition(token) || '';\n  var key = lowercaseFirstLetter(token.substring(preposition.length));\n  var scheme = formatDistanceLocale[key];\n  if (!(options !== null && options !== void 0 && options.addSuffix)) {\n    return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'present');\n  }\n  if (options.comparison && options.comparison > 0) {\n    return prefixPreposition(preposition) + 'o ' + suffixPreposition(preposition) + declension(scheme, count, 'future');\n  } else {\n    return prefixPreposition(preposition) + 'pred ' + suffixPreposition(preposition) + declension(scheme, count, 'past');\n  }\n};\nexport default formatDistance;"],"names":["declension","scheme","count","time","finalText","one","twoFour","other","replace","String","prefixPreposition","preposition","translation","length","suffixPreposition","formatDistanceLocale","xSeconds","present","past","future","halfAMinute","xMinutes","xHours","xDays","xWeeks","xMonths","xYears","__webpack_exports__","token","options","string","result","filter","match","substring","charAt","toLowerCase","slice","addSuffix","comparison"],"sourceRoot":""}