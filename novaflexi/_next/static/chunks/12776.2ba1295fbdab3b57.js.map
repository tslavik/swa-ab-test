{"version":3,"file":"static/chunks/12776.2ba1295fbdab3b57.js","mappings":"2GAAA,IAAAA,EAAA,CACAC,iBAAA,CACAC,KAAA,mCACAC,QAAA,0BACAC,OAAA,0BACA,EACAC,SAAA,CACAH,KAAA,sBACAC,QAAA,iBACAC,OAAA,iBACA,EACAE,YAAA,CACAJ,KAAA,qBACAC,QAAA,gBACAC,OAAA,gBACA,EACAG,iBAAA,CACAL,KAAA,mCACAC,QAAA,0BACAC,OAAA,0BACA,EACAI,SAAA,CACAN,KAAA,sBACAC,QAAA,iBACAC,OAAA,iBACA,EACAK,YAAA,CACAP,KAAA,kCACAC,QAAA,6BACAC,OAAA,6BACA,EACAM,OAAA,CACAR,KAAA,uBACAC,QAAA,kBACAC,OAAA,kBACA,EACAO,MAAA,CACAT,KAAA,qBACAC,QAAA,gBACAC,OAAA,iBACA,EACAQ,YAAA,CACAV,KAAA,kCACAC,QAAA,6BACAC,OAAA,8BACA,EACAS,OAAA,CACAX,KAAA,yBACAC,QAAA,kBACAC,OAAA,mBACA,EACAU,aAAA,CACAZ,KAAA,gCACAC,QAAA,2BACAC,OAAA,4BACA,EACAW,QAAA,CACAb,KAAA,qBACAC,QAAA,gBACAC,OAAA,iBACA,EACAY,YAAA,CACAd,KAAA,gCACAC,QAAA,4BACAC,OAAA,4BACA,EACAa,OAAA,CACAf,KAAA,qBACAC,QAAA,iBACAC,OAAA,iBACA,EACAc,WAAA,CACAhB,KAAA,gCACAC,QAAA,uBACAC,OAAA,kCACA,EACAe,aAAA,CACAjB,KAAA,6BACAC,QAAA,yBACAC,OAAA,yBACA,CACA,CAeAgB,CAAAA,EAAA,QAdA,SAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAEA,IAAAC,EAAAxB,CAAA,CAAAqB,EAAA,CAUA,MATA,iBAAAG,EACAA,EACID,MAAAA,GAAAA,EAAAE,SAAA,EAAAF,EAAAG,UAAA,EAAAH,EAAAG,UAAA,GACJF,EAAApB,MAAA,CAAAuB,OAAA,aAAiDC,OAAAN,IAC7CC,MAAAA,GAAAA,EAAAE,SAAA,CACJD,EAAAtB,IAAA,CAAAyB,OAAA,aAA+CC,OAAAN,IAE/CE,EAAArB,OAAA,CAAAwB,OAAA,aAAkDC,OAAAN,GAGlD","sources":["webpack://_N_E/../../node_modules/date-fns/esm/locale/ka/_lib/formatDistance/index.js","webpack://_N_E/<anon>"],"sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    past: '{{count}} წამზე ნაკლები ხნის წინ',\n    present: '{{count}} წამზე ნაკლები',\n    future: '{{count}} წამზე ნაკლებში'\n  },\n  xSeconds: {\n    past: '{{count}} წამის წინ',\n    present: '{{count}} წამი',\n    future: '{{count}} წამში'\n  },\n  halfAMinute: {\n    past: 'ნახევარი წუთის წინ',\n    present: 'ნახევარი წუთი',\n    future: 'ნახევარი წუთში'\n  },\n  lessThanXMinutes: {\n    past: '{{count}} წუთზე ნაკლები ხნის წინ',\n    present: '{{count}} წუთზე ნაკლები',\n    future: '{{count}} წუთზე ნაკლებში'\n  },\n  xMinutes: {\n    past: '{{count}} წუთის წინ',\n    present: '{{count}} წუთი',\n    future: '{{count}} წუთში'\n  },\n  aboutXHours: {\n    past: 'დაახლოებით {{count}} საათის წინ',\n    present: 'დაახლოებით {{count}} საათი',\n    future: 'დაახლოებით {{count}} საათში'\n  },\n  xHours: {\n    past: '{{count}} საათის წინ',\n    present: '{{count}} საათი',\n    future: '{{count}} საათში'\n  },\n  xDays: {\n    past: '{{count}} დღის წინ',\n    present: '{{count}} დღე',\n    future: '{{count}} დღეში'\n  },\n  aboutXWeeks: {\n    past: 'დაახლოებით {{count}} კვირას წინ',\n    present: 'დაახლოებით {{count}} კვირა',\n    future: 'დაახლოებით {{count}} კვირაში'\n  },\n  xWeeks: {\n    past: '{{count}} კვირას კვირა',\n    present: '{{count}} კვირა',\n    future: '{{count}} კვირაში'\n  },\n  aboutXMonths: {\n    past: 'დაახლოებით {{count}} თვის წინ',\n    present: 'დაახლოებით {{count}} თვე',\n    future: 'დაახლოებით {{count}} თვეში'\n  },\n  xMonths: {\n    past: '{{count}} თვის წინ',\n    present: '{{count}} თვე',\n    future: '{{count}} თვეში'\n  },\n  aboutXYears: {\n    past: 'დაახლოებით {{count}} წლის წინ',\n    present: 'დაახლოებით {{count}} წელი',\n    future: 'დაახლოებით {{count}} წელში'\n  },\n  xYears: {\n    past: '{{count}} წლის წინ',\n    present: '{{count}} წელი',\n    future: '{{count}} წელში'\n  },\n  overXYears: {\n    past: '{{count}} წელზე მეტი ხნის წინ',\n    present: '{{count}} წელზე მეტი',\n    future: '{{count}} წელზე მეტი ხნის შემდეგ'\n  },\n  almostXYears: {\n    past: 'თითქმის {{count}} წლის წინ',\n    present: 'თითქმის {{count}} წელი',\n    future: 'თითქმის {{count}} წელში'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (options !== null && options !== void 0 && options.addSuffix && options.comparison && options.comparison > 0) {\n    result = tokenValue.future.replace('{{count}}', String(count));\n  } else if (options !== null && options !== void 0 && options.addSuffix) {\n    result = tokenValue.past.replace('{{count}}', String(count));\n  } else {\n    result = tokenValue.present.replace('{{count}}', String(count));\n  }\n  return result;\n};\nexport default formatDistance;"],"names":["formatDistanceLocale","lessThanXSeconds","past","present","future","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","__webpack_exports__","token","count","options","tokenValue","addSuffix","comparison","replace","String"],"sourceRoot":""}