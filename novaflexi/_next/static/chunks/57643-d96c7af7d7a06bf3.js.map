{"version":3,"file":"static/chunks/57643-d96c7af7d7a06bf3.js","mappings":"2NUEe,SAASA,EAAgBC,CAAA,EACxC,IAAAC,EAAgB,GAAAC,EAAAC,MAAA,EAAM,KACtB,+DAKA,OAHIC,EAAyB,KAC7BH,EAAAI,OAAA,CAAAL,CACA,EAAK,CAAAA,EAAA,EACM,GAAAE,EAAAI,WAAA,EAAW,IAAAC,IAAAN,EAAAI,OAAA,IAAAE,GAAA,CAAAN,EAAA,CACtB,CCSA,IAAAO,EAjBA,SAAyBC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACzB,IAAAC,EAAyB,GAAAX,EAAAC,MAAA,EAAMO,GAC3BN,EAAyB,KAC7BS,EAAAR,OAAA,CAAAK,CACA,EAAK,CAAAA,EAAA,EACD,GAAAR,EAAAY,SAAA,EAAS,KACb,IAAAC,EACA,IAAAC,EAAA,OAAAD,CAAAA,EAAAJ,MAAAA,EAAA,OAAAA,EAAAN,OAAA,GAAAU,KAAA,IAAAA,EAAAA,EAAAE,MAAA,CACA,IAAAD,CAAAA,GAAAA,EAAAE,gBAAA,EACA,OACA,IAAAC,EAAAC,GAAAP,EAAAR,OAAA,CAAAe,GAEA,OADAJ,EAAAE,gBAAA,CAAAT,EAAAU,EAAAP,GACA,KACAI,EAAAK,mBAAA,CAAAZ,EAAAU,EAAAP,EACA,CACA,EAAK,CAAAH,EAAAE,EAAAC,EAAA,CACL,ESjBA,IAAMU,EAAyB,oBAAAL,OAAmCf,EAAAqB,eAAe,CAAGrB,EAAAY,SAAS,CAC7F,IAAAV,EAAekB,ES0CfE,EA1CA,SAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAsB,GAAAzB,EAAAI,WAAA,EAAW,KACjC,uBAAAW,OACA,OAAAS,CACA,CACA,IACA,IAAAE,EAAAX,OAAAY,cAAA,CAAAC,OAAA,CAAAL,GACA,OAAAG,EAA0BG,SAoCRC,CAAA,EAClB,IACA,MAAAA,cAAAA,EAAAC,KAAAA,EAAAC,KAAAC,KAAA,CAAAH,MAAAA,EAAAA,EAAA,IAEA,MAAAjB,EAAA,CACAqB,QAAAC,GAAA,qBAA0CL,MAAAA,CAAA,GAC1C,MACA,CACA,EA5CmCJ,GAAAF,CAAA,CAEnC,MAAAY,EAAA,CAEA,OADAF,QAAAG,IAAA,sCAA8Dd,EAAI,IAAAa,GAClEZ,CACA,CACA,EAAK,CAAAA,EAAAD,EAAA,EACL,CAAAe,EAAAC,EAAA,CAA0C,GAAAvC,EAAAwC,QAAA,EAAQf,GAClDgB,EAAqB5C,EAAgBiC,GAAA,CACrC,oBAAAf,QACAmB,QAAAG,IAAA,sCAA8Dd,EAAI,4CAElE,IACA,IAAAmB,EAAAZ,aAAAa,SAAAb,EAAAQ,GAAAR,CAAA,CACAf,OAAAY,cAAA,CAAAiB,OAAA,CAAArB,EAAAS,KAAAa,SAAA,CAAAH,IACAH,EAAAG,GACA3B,OAAA+B,aAAA,KAAAC,MAAA,mBACA,CACA,MAAAX,EAAA,CACAF,QAAAG,IAAA,sCAA8Dd,EAAI,IAAAa,EAClE,CACA,GACI,GAAApC,EAAAY,SAAA,EAAS,KACb2B,EAAAd,IACA,EAAK,IACL,IAAAuB,EAAgC,GAAAhD,EAAAI,WAAA,EAAW,UAC3Cc,GAAAA,EAAAK,GAAA,EAAAL,EAAAK,GAAA,GAAAA,GAGAgB,EAAAd,IACA,EAAK,CAAAF,EAAAE,EAAA,EAGL,OAFInB,EAAgB,UAAA0C,GAChB1C,EAAgB,kBAAA0C,GACpB,CAAAV,EAAAG,EAAA,AACA","sources":["webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useBoolean/useBoolean.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useClickAnyWhere/useClickAnyWhere.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useCopyToClipboard/useCopyToClipboard.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useCountdown/useCountdown.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useCounter/useCounter.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useDarkMode/useDarkMode.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useDebounce/useDebounce.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useDocumentTitle/useDocumentTitle.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useEffectOnce/useEffectOnce.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useElementSize/useElementSize.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useEventCallback/useEventCallback.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useEventListener/useEventListener.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useFetch/useFetch.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useHover/useHover.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useImageOnLoad/useImageOnLoad.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useIntersectionObserver/useIntersectionObserver.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useInterval/useInterval.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useIsClient/useIsClient.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useIsFirstRender/useIsFirstRender.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useIsMounted/useIsMounted.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useLocalStorage/useLocalStorage.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useLockedBody/useLockedBody.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useMap/useMap.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useMediaQuery/useMediaQuery.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useOnClickOutside/useOnClickOutside.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useReadLocalStorage/useReadLocalStorage.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useScreen/useScreen.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useScript/useScript.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useSessionStorage/useSessionStorage.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useStep/useStep.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useTernaryDarkMode/useTernaryDarkMode.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useTimeout/useTimeout.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useToggle/useToggle.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useUpdateEffect/useUpdateEffect.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/useWindowSize/useWindowSize.js","webpack://_N_E/../../node_modules/usehooks-ts/dist/esm/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import { useCallback, useState } from 'react';\nfunction useBoolean(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const setTrue = useCallback(() => setValue(true), []);\n    const setFalse = useCallback(() => setValue(false), []);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return { value, setValue, setTrue, setFalse, toggle };\n}\nexport default useBoolean;\n","import { useEventListener } from '..';\nfunction useClickAnyWhere(handler) {\n    useEventListener('click', event => {\n        handler(event);\n    });\n}\nexport default useClickAnyWhere;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useState } from 'react';\nfunction useCopyToClipboard() {\n    const [copiedText, setCopiedText] = useState(null);\n    const copy = (text) => __awaiter(this, void 0, void 0, function* () {\n        if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {\n            console.warn('Clipboard not supported');\n            return false;\n        }\n        try {\n            yield navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        }\n        catch (error) {\n            console.warn('Copy failed', error);\n            setCopiedText(null);\n            return false;\n        }\n    });\n    return [copiedText, copy];\n}\nexport default useCopyToClipboard;\n","import { useCallback } from 'react';\nimport { useBoolean, useCounter, useInterval } from '..';\nfunction useCountdown(countdownOption) {\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if ('seconds' in countdownOption) {\n        console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n        isDeprecated = true;\n        countStart = countdownOption.seconds;\n        intervalMs = countdownOption.interval;\n        isIncrement = countdownOption.isIncrement;\n    }\n    else {\n        ;\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOption);\n    }\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter, } = useCounter(countStart);\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown, } = useBoolean(false);\n    const resetCountdown = () => {\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = useCallback(() => {\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        }\n        else {\n            decrement();\n        }\n    }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated\n        ? [\n            count,\n            {\n                start: startCountdown,\n                stop: stopCountdown,\n                reset: resetCountdown,\n            },\n        ]\n        : [\n            count,\n            {\n                startCountdown,\n                stopCountdown,\n                resetCountdown,\n            },\n        ];\n}\nexport default useCountdown;\n","import { useState } from 'react';\nfunction useCounter(initialValue) {\n    const [count, setCount] = useState(initialValue || 0);\n    const increment = () => setCount(x => x + 1);\n    const decrement = () => setCount(x => x - 1);\n    const reset = () => setCount(initialValue || 0);\n    return {\n        count,\n        increment,\n        decrement,\n        reset,\n        setCount,\n    };\n}\nexport default useCounter;\n","import { useLocalStorage, useMediaQuery, useUpdateEffect } from '..';\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useDarkMode(defaultValue) {\n    var _a;\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [isDarkMode, setDarkMode] = useLocalStorage('usehooks-ts-dark-mode', (_a = defaultValue !== null && defaultValue !== void 0 ? defaultValue : isDarkOS) !== null && _a !== void 0 ? _a : false);\n    useUpdateEffect(() => {\n        setDarkMode(isDarkOS);\n    }, [isDarkOS]);\n    return {\n        isDarkMode,\n        toggle: () => setDarkMode(prev => !prev),\n        enable: () => setDarkMode(true),\n        disable: () => setDarkMode(false),\n    };\n}\nexport default useDarkMode;\n","import { useEffect, useState } from 'react';\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n}\nexport default useDebounce;\n","import { useIsomorphicLayoutEffect } from '..';\nfunction useDocumentTitle(title) {\n    useIsomorphicLayoutEffect(() => {\n        window.document.title = title;\n    }, [title]);\n}\nexport default useDocumentTitle;\n","import { useEffect } from 'react';\nfunction useEffectOnce(effect) {\n    useEffect(effect, []);\n}\nexport default useEffectOnce;\n","import { useCallback, useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useElementSize() {\n    const [ref, setRef] = useState(null);\n    const [size, setSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = useCallback(() => {\n        setSize({\n            width: (ref === null || ref === void 0 ? void 0 : ref.offsetWidth) || 0,\n            height: (ref === null || ref === void 0 ? void 0 : ref.offsetHeight) || 0,\n        });\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    return [setRef, size];\n}\nexport default useElementSize;\n","import { useCallback, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nexport default function useEventCallback(fn) {\n    const ref = useRef(() => {\n        throw new Error('Cannot call an event handler while rendering.');\n    });\n    useIsomorphicLayoutEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return useCallback((...args) => ref.current(...args), [ref]);\n}\n","import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useEventListener(eventName, handler, element, options) {\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        var _a;\n        const targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n        if (!(targetElement && targetElement.addEventListener))\n            return;\n        const listener = event => savedHandler.current(event);\n        targetElement.addEventListener(eventName, listener, options);\n        return () => {\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [eventName, element, options]);\n}\nexport default useEventListener;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useEffect, useReducer, useRef } from 'react';\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        return () => {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\nexport default useFetch;\n","import { useState } from 'react';\nimport { useEventListener } from '..';\nfunction useHover(elementRef) {\n    const [value, setValue] = useState(false);\n    const handleMouseEnter = () => setValue(true);\n    const handleMouseLeave = () => setValue(false);\n    useEventListener('mouseenter', handleMouseEnter, elementRef);\n    useEventListener('mouseleave', handleMouseLeave, elementRef);\n    return value;\n}\nexport default useHover;\n","import { useState } from 'react';\nfunction useImageOnLoad() {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const handleImageOnLoad = () => {\n        setIsLoaded(true);\n    };\n    const css = {\n        thumbnail: {\n            visibility: isLoaded ? 'hidden' : 'visible',\n            filter: 'blur(8px)',\n            transition: 'visibility 0ms ease-out 500ms',\n        },\n        fullSize: {\n            opacity: isLoaded ? 1 : 0,\n            transition: 'opacity 500ms ease-in 0ms',\n        },\n    };\n    return { handleImageOnLoad, css };\n}\nexport default useImageOnLoad;\n","import { useEffect, useState } from 'react';\nfunction useIntersectionObserver(elementRef, { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible = false, }) {\n    const [entry, setEntry] = useState();\n    const frozen = (entry === null || entry === void 0 ? void 0 : entry.isIntersecting) && freezeOnceVisible;\n    const updateEntry = ([entry]) => {\n        setEntry(entry);\n    };\n    useEffect(() => {\n        const node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n        const hasIOSupport = !!window.IntersectionObserver;\n        if (!hasIOSupport || frozen || !node)\n            return;\n        const observerParams = { threshold, root, rootMargin };\n        const observer = new IntersectionObserver(updateEntry, observerParams);\n        observer.observe(node);\n        return () => observer.disconnect();\n    }, [elementRef === null || elementRef === void 0 ? void 0 : elementRef.current, JSON.stringify(threshold), root, rootMargin, frozen]);\n    return entry;\n}\nexport default useIntersectionObserver;\n","import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setInterval(() => savedCallback.current(), delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\nexport default useInterval;\n","import { useEffect, useState } from 'react';\nfunction useIsClient() {\n    const [isClient, setClient] = useState(false);\n    useEffect(() => {\n        setClient(true);\n    }, []);\n    return isClient;\n}\nexport default useIsClient;\n","import { useRef } from 'react';\nfunction useIsFirstRender() {\n    const isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\nexport default useIsFirstRender;\n","import { useCallback, useEffect, useRef } from 'react';\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return useCallback(() => isMounted.current, []);\n}\nexport default useIsMounted;\n","import { useEffect, useLayoutEffect } from 'react';\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useCallback, useEffect, useState, } from 'react';\nimport { useEventCallback, useEventListener } from '..';\nfunction useLocalStorage(key, initialValue) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window === 'undefined') {\n            console.warn(`Tried setting localStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            window.localStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('local-storage'));\n        }\n        catch (error) {\n            console.warn(`Error setting localStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('local-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\nexport default useLocalStorage;\nfunction parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (_a) {\n        console.log('parsing error on', { value });\n        return undefined;\n    }\n}\n","import { useEffect, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useLockedBody(initialLocked = false, rootId = '___gatsby') {\n    const [locked, setLocked] = useState(initialLocked);\n    useIsomorphicLayoutEffect(() => {\n        if (!locked) {\n            return;\n        }\n        const originalOverflow = document.body.style.overflow;\n        const originalPaddingRight = document.body.style.paddingRight;\n        document.body.style.overflow = 'hidden';\n        const root = document.getElementById(rootId);\n        const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n        if (scrollBarWidth) {\n            document.body.style.paddingRight = `${scrollBarWidth}px`;\n        }\n        return () => {\n            document.body.style.overflow = originalOverflow;\n            if (scrollBarWidth) {\n                document.body.style.paddingRight = originalPaddingRight;\n            }\n        };\n    }, [locked]);\n    useEffect(() => {\n        if (locked !== initialLocked) {\n            setLocked(initialLocked);\n        }\n    }, [initialLocked]);\n    return [locked, setLocked];\n}\nexport default useLockedBody;\n","import { useCallback, useState } from 'react';\nfunction useMap(initialState = new Map()) {\n    const [map, setMap] = useState(new Map(initialState));\n    const actions = {\n        set: useCallback((key, value) => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.set(key, value);\n                return copy;\n            });\n        }, []),\n        setAll: useCallback(entries => {\n            setMap(() => new Map(entries));\n        }, []),\n        remove: useCallback(key => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.delete(key);\n                return copy;\n            });\n        }, []),\n        reset: useCallback(() => {\n            setMap(() => new Map());\n        }, []),\n    };\n    return [map, actions];\n}\nexport default useMap;\n","import { useEffect, useState } from 'react';\nfunction useMediaQuery(query) {\n    const getMatches = (query) => {\n        if (typeof window !== 'undefined') {\n            return window.matchMedia(query).matches;\n        }\n        return false;\n    };\n    const [matches, setMatches] = useState(getMatches(query));\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useEffect(() => {\n        const matchMedia = window.matchMedia(query);\n        handleChange();\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        }\n        else {\n            matchMedia.addEventListener('change', handleChange);\n        }\n        return () => {\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            }\n            else {\n                matchMedia.removeEventListener('change', handleChange);\n            }\n        };\n    }, [query]);\n    return matches;\n}\nexport default useMediaQuery;\n","import { useEventListener } from '..';\nfunction useOnClickOutside(ref, handler, mouseEvent = 'mousedown') {\n    useEventListener(mouseEvent, event => {\n        const el = ref === null || ref === void 0 ? void 0 : ref.current;\n        if (!el || el.contains(event.target)) {\n            return;\n        }\n        handler(event);\n    });\n}\nexport default useOnClickOutside;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useEventListener } from '..';\nfunction useReadLocalStorage(key) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return null;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : null;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return null;\n        }\n    }, [key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('local-storage', handleStorageChange);\n    return storedValue;\n}\nexport default useReadLocalStorage;\n","import { useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useScreen() {\n    const getScreen = () => {\n        if (typeof window !== 'undefined' && window.screen) {\n            return window.screen;\n        }\n        return undefined;\n    };\n    const [screen, setScreen] = useState(getScreen());\n    function handleSize() {\n        setScreen(getScreen());\n    }\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return screen;\n}\nexport default useScreen;\n","import { useEffect, useState } from 'react';\nconst cachedScriptStatuses = {};\nfunction getScriptNode(src) {\n    const node = document.querySelector(`script[src=\"${src}\"]`);\n    const status = node === null || node === void 0 ? void 0 : node.getAttribute('data-status');\n    return {\n        node,\n        status,\n    };\n}\nfunction useScript(src, options) {\n    const [status, setStatus] = useState(() => {\n        var _a;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return 'idle';\n        }\n        if (typeof window === 'undefined') {\n            return 'loading';\n        }\n        return (_a = cachedScriptStatuses[src]) !== null && _a !== void 0 ? _a : 'loading';\n    });\n    useEffect(() => {\n        var _a, _b;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return;\n        }\n        const cachedScriptStatus = cachedScriptStatuses[src];\n        if (cachedScriptStatus === 'ready' || cachedScriptStatus === 'error') {\n            setStatus(cachedScriptStatus);\n            return;\n        }\n        const script = getScriptNode(src);\n        let scriptNode = script.node;\n        if (!scriptNode) {\n            scriptNode = document.createElement('script');\n            scriptNode.src = src;\n            scriptNode.async = true;\n            scriptNode.setAttribute('data-status', 'loading');\n            document.body.appendChild(scriptNode);\n            const setAttributeFromEvent = (event) => {\n                const scriptStatus = event.type === 'load' ? 'ready' : 'error';\n                scriptNode === null || scriptNode === void 0 ? void 0 : scriptNode.setAttribute('data-status', scriptStatus);\n            };\n            scriptNode.addEventListener('load', setAttributeFromEvent);\n            scriptNode.addEventListener('error', setAttributeFromEvent);\n        }\n        else {\n            setStatus((_b = (_a = script.status) !== null && _a !== void 0 ? _a : cachedScriptStatus) !== null && _b !== void 0 ? _b : 'loading');\n        }\n        const setStateFromEvent = (event) => {\n            const newStatus = event.type === 'load' ? 'ready' : 'error';\n            setStatus(newStatus);\n            cachedScriptStatuses[src] = newStatus;\n        };\n        scriptNode.addEventListener('load', setStateFromEvent);\n        scriptNode.addEventListener('error', setStateFromEvent);\n        return () => {\n            if (scriptNode) {\n                scriptNode.removeEventListener('load', setStateFromEvent);\n                scriptNode.removeEventListener('error', setStateFromEvent);\n            }\n            if (scriptNode && (options === null || options === void 0 ? void 0 : options.removeOnUnmount)) {\n                scriptNode.remove();\n            }\n        };\n    }, [src, options === null || options === void 0 ? void 0 : options.shouldPreventLoad, options === null || options === void 0 ? void 0 : options.removeOnUnmount]);\n    return status;\n}\nexport default useScript;\n","import { useCallback, useEffect, useState, } from 'react';\nimport { useEventCallback, useEventListener } from '..';\nfunction useSessionStorage(key, initialValue) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            const item = window.sessionStorage.getItem(key);\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Error reading sessionStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window == 'undefined') {\n            console.warn(`Tried setting sessionStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            window.sessionStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('session-storage'));\n        }\n        catch (error) {\n            console.warn(`Error setting sessionStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('session-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\nexport default useSessionStorage;\nfunction parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (_a) {\n        console.log('parsing error on', { value });\n        return undefined;\n    }\n}\n","import { useCallback, useMemo, useState } from 'react';\nfunction useStep(maxStep) {\n    const [currentStep, setCurrentStep] = useState(1);\n    const canGoToNextStep = useMemo(() => currentStep + 1 <= maxStep, [currentStep, maxStep]);\n    const canGoToPrevStep = useMemo(() => currentStep - 1 >= 1, [currentStep]);\n    const setStep = useCallback(step => {\n        const newStep = step instanceof Function ? step(currentStep) : step;\n        if (newStep >= 1 && newStep <= maxStep) {\n            setCurrentStep(newStep);\n            return;\n        }\n        throw new Error('Step not valid');\n    }, [maxStep, currentStep]);\n    const goToNextStep = useCallback(() => {\n        if (canGoToNextStep) {\n            setCurrentStep(step => step + 1);\n        }\n    }, [canGoToNextStep]);\n    const goToPrevStep = useCallback(() => {\n        if (canGoToPrevStep) {\n            setCurrentStep(step => step - 1);\n        }\n    }, [canGoToPrevStep]);\n    const reset = useCallback(() => {\n        setCurrentStep(1);\n    }, []);\n    return [\n        currentStep,\n        {\n            goToNextStep,\n            goToPrevStep,\n            canGoToNextStep,\n            canGoToPrevStep,\n            setStep,\n            reset,\n        },\n    ];\n}\nexport default useStep;\n","import { useEffect, useState } from 'react';\nimport { useLocalStorage, useMediaQuery, useUpdateEffect } from '..';\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useTernaryDarkMode() {\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [ternaryDarkMode, setTernaryDarkMode] = useLocalStorage('usehooks-ts-ternary-dark-mode', 'system');\n    const [isDarkMode, setDarkMode] = useState(isDarkOS);\n    useUpdateEffect(() => {\n        if (ternaryDarkMode === 'system') {\n            setDarkMode(isDarkOS);\n        }\n    }, [isDarkOS]);\n    useEffect(() => {\n        switch (ternaryDarkMode) {\n            case 'light':\n                setDarkMode(false);\n                break;\n            case 'system':\n                setDarkMode(isDarkOS);\n                break;\n            case 'dark':\n                setDarkMode(true);\n                break;\n        }\n    }, [ternaryDarkMode, isDarkOS]);\n    function toggleTernaryDarkMode() {\n        const toggleDict = {\n            light: 'system',\n            system: 'dark',\n            dark: 'light',\n        };\n        setTernaryDarkMode(prevMode => toggleDict[prevMode]);\n    }\n    return {\n        isDarkMode,\n        ternaryDarkMode,\n        setTernaryDarkMode,\n        toggleTernaryDarkMode,\n    };\n}\nexport default useTernaryDarkMode;\n","import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useTimeout(callback, delay) {\n    const savedCallback = useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setTimeout(() => savedCallback.current(), delay);\n        return () => clearTimeout(id);\n    }, [delay]);\n}\nexport default useTimeout;\n","import { useCallback, useState } from 'react';\nfunction useToggle(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return [value, toggle, setValue];\n}\nexport default useToggle;\n","import { useEffect } from 'react';\nimport { useIsFirstRender } from '..';\nfunction useUpdateEffect(effect, deps) {\n    const isFirst = useIsFirstRender();\n    useEffect(() => {\n        if (!isFirst) {\n            return effect();\n        }\n    }, deps);\n}\nexport default useUpdateEffect;\n","import { useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = () => {\n        setWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    };\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return windowSize;\n}\nexport default useWindowSize;\n","export { default as useBoolean } from './useBoolean/useBoolean';\nexport * from './useBoolean/useBoolean';\nexport { default as useClickAnyWhere } from './useClickAnyWhere/useClickAnyWhere';\nexport * from './useClickAnyWhere/useClickAnyWhere';\nexport { default as useCopyToClipboard } from './useCopyToClipboard/useCopyToClipboard';\nexport * from './useCopyToClipboard/useCopyToClipboard';\nexport { default as useCountdown } from './useCountdown/useCountdown';\nexport * from './useCountdown/useCountdown';\nexport { default as useCounter } from './useCounter/useCounter';\nexport * from './useCounter/useCounter';\nexport { default as useDarkMode } from './useDarkMode/useDarkMode';\nexport * from './useDarkMode/useDarkMode';\nexport { default as useDebounce } from './useDebounce/useDebounce';\nexport * from './useDebounce/useDebounce';\nexport { default as useDocumentTitle } from './useDocumentTitle/useDocumentTitle';\nexport * from './useDocumentTitle/useDocumentTitle';\nexport { default as useEffectOnce } from './useEffectOnce/useEffectOnce';\nexport * from './useEffectOnce/useEffectOnce';\nexport { default as useElementSize } from './useElementSize/useElementSize';\nexport * from './useElementSize/useElementSize';\nexport { default as useEventCallback } from './useEventCallback/useEventCallback';\nexport * from './useEventCallback/useEventCallback';\nexport { default as useEventListener } from './useEventListener/useEventListener';\nexport * from './useEventListener/useEventListener';\nexport { default as useFetch } from './useFetch/useFetch';\nexport * from './useFetch/useFetch';\nexport { default as useHover } from './useHover/useHover';\nexport * from './useHover/useHover';\nexport { default as useImageOnLoad } from './useImageOnLoad/useImageOnLoad';\nexport * from './useImageOnLoad/useImageOnLoad';\nexport { default as useIntersectionObserver } from './useIntersectionObserver/useIntersectionObserver';\nexport * from './useIntersectionObserver/useIntersectionObserver';\nexport { default as useInterval } from './useInterval/useInterval';\nexport * from './useInterval/useInterval';\nexport { default as useIsClient } from './useIsClient/useIsClient';\nexport * from './useIsClient/useIsClient';\nexport { default as useIsFirstRender } from './useIsFirstRender/useIsFirstRender';\nexport * from './useIsFirstRender/useIsFirstRender';\nexport { default as useIsMounted } from './useIsMounted/useIsMounted';\nexport * from './useIsMounted/useIsMounted';\nexport { default as useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect/useIsomorphicLayoutEffect';\nexport * from './useIsomorphicLayoutEffect/useIsomorphicLayoutEffect';\nexport { default as useLocalStorage } from './useLocalStorage/useLocalStorage';\nexport * from './useLocalStorage/useLocalStorage';\nexport { default as useLockedBody } from './useLockedBody/useLockedBody';\nexport * from './useLockedBody/useLockedBody';\nexport { default as useMap } from './useMap/useMap';\nexport * from './useMap/useMap';\nexport { default as useMediaQuery } from './useMediaQuery/useMediaQuery';\nexport * from './useMediaQuery/useMediaQuery';\nexport { default as useOnClickOutside } from './useOnClickOutside/useOnClickOutside';\nexport * from './useOnClickOutside/useOnClickOutside';\nexport { default as useReadLocalStorage } from './useReadLocalStorage/useReadLocalStorage';\nexport * from './useReadLocalStorage/useReadLocalStorage';\nexport { default as useScreen } from './useScreen/useScreen';\nexport * from './useScreen/useScreen';\nexport { default as useScript } from './useScript/useScript';\nexport * from './useScript/useScript';\nexport { default as useSessionStorage } from './useSessionStorage/useSessionStorage';\nexport * from './useSessionStorage/useSessionStorage';\nexport { default as useSsr } from './useSsr/useSsr';\nexport * from './useSsr/useSsr';\nexport { default as useStep } from './useStep/useStep';\nexport * from './useStep/useStep';\nexport { default as useTernaryDarkMode } from './useTernaryDarkMode/useTernaryDarkMode';\nexport * from './useTernaryDarkMode/useTernaryDarkMode';\nexport { default as useTimeout } from './useTimeout/useTimeout';\nexport * from './useTimeout/useTimeout';\nexport { default as useToggle } from './useToggle/useToggle';\nexport * from './useToggle/useToggle';\nexport { default as useUpdateEffect } from './useUpdateEffect/useUpdateEffect';\nexport * from './useUpdateEffect/useUpdateEffect';\nexport { default as useWindowSize } from './useWindowSize/useWindowSize';\nexport * from './useWindowSize/useWindowSize';\n"],"names":["useEventCallback_useEventCallback","fn","ref","react","useRef","esm_useIsomorphicLayoutEffect_useIsomorphicLayoutEffect","current","useCallback","args","esm_useEventListener_useEventListener","eventName","handler","element","options","savedHandler","useEffect","_a","targetElement","window","addEventListener","listener","event","removeEventListener","useIsomorphicLayoutEffect_useIsomorphicLayoutEffect","useLayoutEffect","useSessionStorage_useSessionStorage","key","initialValue","readValue","item","sessionStorage","getItem","useSessionStorage_parseJSON","value","undefined","JSON","parse","console","log","error","warn","storedValue","setStoredValue","useState","setValue","newValue","Function","setItem","stringify","dispatchEvent","Event","handleStorageChange"],"sourceRoot":""}