{"version":3,"file":"static/chunks/97080.e356fdb048867e7c.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/uk/_lib/formatDistance/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/uk/_lib/formatLong/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/uk/_lib/formatRelative/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/uk/_lib/localize/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/uk/_lib/match/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/uk/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n  var rem10 = count % 10;\n  var rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'за ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' тому';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\nvar halfAtMinute = function halfAtMinute(_, options) {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'за півхвилини';\n    } else {\n      return 'півхвилини тому';\n    }\n  }\n  return 'півхвилини';\n};\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менше секунди',\n      singularNominative: 'менше {{count}} секунди',\n      singularGenitive: 'менше {{count}} секунд',\n      pluralGenitive: 'менше {{count}} секунд'\n    },\n    future: {\n      one: 'менше, ніж за секунду',\n      singularNominative: 'менше, ніж за {{count}} секунду',\n      singularGenitive: 'менше, ніж за {{count}} секунди',\n      pluralGenitive: 'менше, ніж за {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунди',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду тому',\n      singularGenitive: '{{count}} секунди тому',\n      pluralGenitive: '{{count}} секунд тому'\n    },\n    future: {\n      singularNominative: 'за {{count}} секунду',\n      singularGenitive: 'за {{count}} секунди',\n      pluralGenitive: 'за {{count}} секунд'\n    }\n  }),\n  halfAMinute: halfAtMinute,\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менше хвилини',\n      singularNominative: 'менше {{count}} хвилини',\n      singularGenitive: 'менше {{count}} хвилин',\n      pluralGenitive: 'менше {{count}} хвилин'\n    },\n    future: {\n      one: 'менше, ніж за хвилину',\n      singularNominative: 'менше, ніж за {{count}} хвилину',\n      singularGenitive: 'менше, ніж за {{count}} хвилини',\n      pluralGenitive: 'менше, ніж за {{count}} хвилин'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвилина',\n      singularGenitive: '{{count}} хвилини',\n      pluralGenitive: '{{count}} хвилин'\n    },\n    past: {\n      singularNominative: '{{count}} хвилину тому',\n      singularGenitive: '{{count}} хвилини тому',\n      pluralGenitive: '{{count}} хвилин тому'\n    },\n    future: {\n      singularNominative: 'за {{count}} хвилину',\n      singularGenitive: 'за {{count}} хвилини',\n      pluralGenitive: 'за {{count}} хвилин'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} години',\n      singularGenitive: 'близько {{count}} годин',\n      pluralGenitive: 'близько {{count}} годин'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} годину',\n      singularGenitive: 'приблизно за {{count}} години',\n      pluralGenitive: 'приблизно за {{count}} годин'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} годину',\n      singularGenitive: '{{count}} години',\n      pluralGenitive: '{{count}} годин'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} день',\n      singularGenitive: '{{count}} днi',\n      pluralGenitive: '{{count}} днів'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} тижня',\n      singularGenitive: 'близько {{count}} тижнів',\n      pluralGenitive: 'близько {{count}} тижнів'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} тиждень',\n      singularGenitive: 'приблизно за {{count}} тижні',\n      pluralGenitive: 'приблизно за {{count}} тижнів'\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} тиждень',\n      singularGenitive: '{{count}} тижні',\n      pluralGenitive: '{{count}} тижнів'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} місяця',\n      singularGenitive: 'близько {{count}} місяців',\n      pluralGenitive: 'близько {{count}} місяців'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} місяць',\n      singularGenitive: 'приблизно за {{count}} місяці',\n      pluralGenitive: 'приблизно за {{count}} місяців'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} місяць',\n      singularGenitive: '{{count}} місяці',\n      pluralGenitive: '{{count}} місяців'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} року',\n      singularGenitive: 'близько {{count}} років',\n      pluralGenitive: 'близько {{count}} років'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} рік',\n      singularGenitive: 'приблизно за {{count}} роки',\n      pluralGenitive: 'приблизно за {{count}} років'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} рік',\n      singularGenitive: '{{count}} роки',\n      pluralGenitive: '{{count}} років'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'більше {{count}} року',\n      singularGenitive: 'більше {{count}} років',\n      pluralGenitive: 'більше {{count}} років'\n    },\n    future: {\n      singularNominative: 'більше, ніж за {{count}} рік',\n      singularGenitive: 'більше, ніж за {{count}} роки',\n      pluralGenitive: 'більше, ніж за {{count}} років'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'майже {{count}} рік',\n      singularGenitive: 'майже {{count}} роки',\n      pluralGenitive: 'майже {{count}} років'\n    },\n    future: {\n      singularNominative: 'майже за {{count}} рік',\n      singularGenitive: 'майже за {{count}} роки',\n      pluralGenitive: 'майже за {{count}} років'\n    }\n  })\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: \"EEEE, do MMMM y 'р.'\",\n  long: \"do MMMM y 'р.'\",\n  medium: \"d MMM y 'р.'\",\n  short: 'dd.MM.y'\n};\nvar timeFormats = {\n  full: 'H:mm:ss zzzz',\n  long: 'H:mm:ss z',\n  medium: 'H:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'о' {{time}}\",\n  long: \"{{date}} 'о' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","import { toDate } from \"../../../../index.js\";\nimport isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['неділю', 'понеділок', 'вівторок', 'середу', 'четвер', 'п’ятницю', 'суботу'];\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у минулу \" + weekday + \" о' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'у минулий \" + weekday + \" о' p\";\n  }\n}\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'у \" + weekday + \" о' p\";\n}\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у наступну \" + weekday + \" о' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'у наступний \" + weekday + \" о' p\";\n  }\n}\nvar lastWeekFormat = function lastWeekFormat(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\nvar nextWeekFormat = function nextWeekFormat(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'вчора о' p\",\n  today: \"'сьогодні о' p\",\n  tomorrow: \"'завтра о' p\",\n  nextWeek: nextWeekFormat,\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['до н.е.', 'н.е.'],\n  abbreviated: ['до н. е.', 'н. е.'],\n  wide: ['до нашої ери', 'нашої ери']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-й кв.', '2-й кв.', '3-й кв.', '4-й кв.'],\n  wide: ['1-й квартал', '2-й квартал', '3-й квартал', '4-й квартал']\n};\nvar monthValues = {\n  // ДСТУ 3582:2013\n  narrow: ['С', 'Л', 'Б', 'К', 'Т', 'Ч', 'Л', 'С', 'В', 'Ж', 'Л', 'Г'],\n  abbreviated: ['січ.', 'лют.', 'берез.', 'квіт.', 'трав.', 'черв.', 'лип.', 'серп.', 'верес.', 'жовт.', 'листоп.', 'груд.'],\n  wide: ['січень', 'лютий', 'березень', 'квітень', 'травень', 'червень', 'липень', 'серпень', 'вересень', 'жовтень', 'листопад', 'грудень']\n};\nvar formattingMonthValues = {\n  narrow: ['С', 'Л', 'Б', 'К', 'Т', 'Ч', 'Л', 'С', 'В', 'Ж', 'Л', 'Г'],\n  abbreviated: ['січ.', 'лют.', 'берез.', 'квіт.', 'трав.', 'черв.', 'лип.', 'серп.', 'верес.', 'жовт.', 'листоп.', 'груд.'],\n  wide: ['січня', 'лютого', 'березня', 'квітня', 'травня', 'червня', 'липня', 'серпня', 'вересня', 'жовтня', 'листопада', 'грудня']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  abbreviated: ['нед', 'пон', 'вів', 'сер', 'чтв', 'птн', 'суб'],\n  wide: ['неділя', 'понеділок', 'вівторок', 'середа', 'четвер', 'п’ятниця', 'субота']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранок',\n    afternoon: 'день',\n    evening: 'веч.',\n    night: 'ніч'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранок',\n    afternoon: 'день',\n    evening: 'веч.',\n    night: 'ніч'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'північ',\n    noon: 'полудень',\n    morning: 'ранок',\n    afternoon: 'день',\n    evening: 'вечір',\n    night: 'ніч'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранку',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночі'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранку',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночі'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'північ',\n    noon: 'полудень',\n    morning: 'ранку',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночі'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, options) {\n  var unit = String(options === null || options === void 0 ? void 0 : options.unit);\n  var number = Number(dirtyNumber);\n  var suffix;\n  if (unit === 'date') {\n    if (number === 3 || number === 23) {\n      suffix = '-є';\n    } else {\n      suffix = '-е';\n    }\n  } else if (unit === 'minute' || unit === 'second' || unit === 'hour') {\n    suffix = '-а';\n  } else {\n    suffix = '-й';\n  }\n  return number + suffix;\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'any',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?(е|й|є|а|я))?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((до )?н\\.?\\s?е\\.?)/i,\n  abbreviated: /^((до )?н\\.?\\s?е\\.?)/i,\n  wide: /^(до нашої ери|нашої ери|наша ера)/i\n};\nvar parseEraPatterns = {\n  any: [/^д/i, /^н/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[иі]?й?)? кв.?/i,\n  wide: /^[1234](-?[иі]?й?)? квартал/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[слбктчвжг]/i,\n  abbreviated: /^(січ|лют|бер(ез)?|квіт|трав|черв|лип|серп|вер(ес)?|жовт|лис(топ)?|груд)\\.?/i,\n  wide: /^(січень|січня|лютий|лютого|березень|березня|квітень|квітня|травень|травня|червня|червень|липень|липня|серпень|серпня|вересень|вересня|жовтень|жовтня|листопад[а]?|грудень|грудня)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^с/i, /^л/i, /^б/i, /^к/i, /^т/i, /^ч/i, /^л/i, /^с/i, /^в/i, /^ж/i, /^л/i, /^г/i],\n  any: [/^сі/i, /^лю/i, /^б/i, /^к/i, /^т/i, /^ч/i, /^лип/i, /^се/i, /^в/i, /^ж/i, /^лис/i, /^г/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[нпвсч]/i,\n  short: /^(нд|пн|вт|ср|чт|пт|сб)\\.?/i,\n  abbreviated: /^(нед|пон|вів|сер|че?тв|птн?|суб)\\.?/i,\n  wide: /^(неділ[яі]|понеділ[ок][ка]|вівтор[ок][ка]|серед[аи]|четвер(га)?|п\\W*?ятниц[яі]|субот[аи])/i\n};\nvar parseDayPatterns = {\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^н/i, /^п[он]/i, /^в/i, /^с[ер]/i, /^ч/i, /^п\\W*?[ят]/i, /^с[уб]/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^([дп]п|півн\\.?|пол\\.?|ранок|ранку|день|дня|веч\\.?|ніч|ночі)/i,\n  abbreviated: /^([дп]п|півн\\.?|пол\\.?|ранок|ранку|день|дня|веч\\.?|ніч|ночі)/i,\n  wide: /^([дп]п|північ|полудень|ранок|ранку|день|дня|вечір|вечора|ніч|ночі)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^дп/i,\n    pm: /^пп/i,\n    midnight: /^півн/i,\n    noon: /^пол/i,\n    morning: /^р/i,\n    afternoon: /^д[ен]/i,\n    evening: /^в/i,\n    night: /^н/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Ukrainian locale.\n * @language Ukrainian\n * @iso-639-2 ukr\n * @author Andrii Korzh [@korzhyk]{@link https://github.com/korzhyk}\n * @author Andriy Shcherbyak [@shcherbyakdev]{@link https://github.com/shcherbyakdev}\n */\nvar locale = {\n  code: 'uk',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;"],"names":["isSameUTCWeek","dirtyDateLeft","dirtyDateRight","options","_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","dateLeftStartOfWeek","_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","dateRightStartOfWeek","getTime","declension","scheme","count","undefined","one","rem10","rem100","singularNominative","replace","String","singularGenitive","pluralGenitive","buildLocalizeTokenFn","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","__webpack_exports__","token","formatLong","date","_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__","formats","full","long","medium","short","defaultWidth","time","dateTime","accusativeWeekdays","thisWeek","day","formatRelativeLocale","lastWeek","dirtyDate","baseDate","_index_js__WEBPACK_IMPORTED_MODULE_0__","getUTCDay","_lib_isSameUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","weekday","yesterday","today","tomorrow","nextWeek","other","format","localize","ordinalNumber","dirtyNumber","unit","number","Number","era","_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__","values","narrow","abbreviated","wide","quarter","argumentCallback","month","formattingValues","defaultFormattingWidth","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","match","_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__","matchPattern","parsePattern","valueCallback","value","parseInt","_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__","matchPatterns","defaultMatchWidth","parsePatterns","any","defaultParseWidth","index","locale","code","formatDistance","_lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__","formatRelative","_lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__","_lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__","_lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}