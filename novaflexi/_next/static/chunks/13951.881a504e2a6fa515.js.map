{"version":3,"file":"static/chunks/13951.881a504e2a6fa515.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/date-fns/esm/locale/nb/_lib/formatDistance/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/nb/_lib/formatLong/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/nb/_lib/formatRelative/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/nb/_lib/localize/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/nb/_lib/match/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/nb/index.js","webpack://_N_E/<anon>"],"sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'mindre enn ett sekund',\n    other: 'mindre enn {{count}} sekunder'\n  },\n  xSeconds: {\n    one: 'ett sekund',\n    other: '{{count}} sekunder'\n  },\n  halfAMinute: 'et halvt minutt',\n  lessThanXMinutes: {\n    one: 'mindre enn ett minutt',\n    other: 'mindre enn {{count}} minutter'\n  },\n  xMinutes: {\n    one: 'ett minutt',\n    other: '{{count}} minutter'\n  },\n  aboutXHours: {\n    one: 'omtrent en time',\n    other: 'omtrent {{count}} timer'\n  },\n  xHours: {\n    one: 'en time',\n    other: '{{count}} timer'\n  },\n  xDays: {\n    one: 'en dag',\n    other: '{{count}} dager'\n  },\n  aboutXWeeks: {\n    one: 'omtrent en uke',\n    other: 'omtrent {{count}} uker'\n  },\n  xWeeks: {\n    one: 'en uke',\n    other: '{{count}} uker'\n  },\n  aboutXMonths: {\n    one: 'omtrent en måned',\n    other: 'omtrent {{count}} måneder'\n  },\n  xMonths: {\n    one: 'en måned',\n    other: '{{count}} måneder'\n  },\n  aboutXYears: {\n    one: 'omtrent ett år',\n    other: 'omtrent {{count}} år'\n  },\n  xYears: {\n    one: 'ett år',\n    other: '{{count}} år'\n  },\n  overXYears: {\n    one: 'over ett år',\n    other: 'over {{count}} år'\n  },\n  almostXYears: {\n    one: 'nesten ett år',\n    other: 'nesten {{count}} år'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'om ' + result;\n    } else {\n      return result + ' siden';\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE d. MMMM y',\n  long: 'd. MMMM y',\n  medium: 'd. MMM y',\n  short: 'dd.MM.y'\n};\nvar timeFormats = {\n  full: \"'kl'. HH:mm:ss zzzz\",\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'kl.' {{time}}\",\n  long: \"{{date}} 'kl.' {{time}}\",\n  medium: '{{date}} {{time}}',\n  short: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'forrige' eeee 'kl.' p\",\n  yesterday: \"'i går kl.' p\",\n  today: \"'i dag kl.' p\",\n  tomorrow: \"'i morgen kl.' p\",\n  nextWeek: \"EEEE 'kl.' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['f.Kr.', 'e.Kr.'],\n  abbreviated: ['f.Kr.', 'e.Kr.'],\n  wide: ['før Kristus', 'etter Kristus']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1. kvartal', '2. kvartal', '3. kvartal', '4. kvartal']\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['jan.', 'feb.', 'mars', 'apr.', 'mai', 'juni', 'juli', 'aug.', 'sep.', 'okt.', 'nov.', 'des.'],\n  wide: ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'O', 'T', 'F', 'L'],\n  short: ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø'],\n  abbreviated: ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør'],\n  wide: ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'midnatt',\n    noon: 'middag',\n    morning: 'på morg.',\n    afternoon: 'på etterm.',\n    evening: 'på kvelden',\n    night: 'på natten'\n  },\n  abbreviated: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnatt',\n    noon: 'middag',\n    morning: 'på morg.',\n    afternoon: 'på etterm.',\n    evening: 'på kvelden',\n    night: 'på natten'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnatt',\n    noon: 'middag',\n    morning: 'på morgenen',\n    afternoon: 'på ettermiddagen',\n    evening: 'på kvelden',\n    night: 'på natten'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n  return number + '.';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n  abbreviated: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n  wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i\n};\nvar parseEraPatterns = {\n  any: [/^f/i, /^e/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? kvartal/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\\.?/i,\n  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtofl]/i,\n  short: /^(sø|ma|ti|on|to|fr|lø)/i,\n  abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,\n  wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i\n};\nvar parseDayPatterns = {\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a(\\.?\\s?m\\.?)?$/i,\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\n    midnight: /^midn/i,\n    noon: /^midd/i,\n    morning: /morgen/i,\n    afternoon: /ettermiddag/i,\n    evening: /kveld/i,\n    night: /natt/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Norwegian Bokmål locale.\n * @language Norwegian Bokmål\n * @iso-639-2 nob\n * @author Hans-Kristian Koren [@Hanse]{@link https://github.com/Hanse}\n * @author Mikolaj Grzyb [@mikolajgrzyb]{@link https://github.com/mikolajgrzyb}\n * @author Dag Stuan [@dagstuan]{@link https://github.com/dagstuan}\n */\nvar locale = {\n  code: 'nb',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","__webpack_exports__","token","count","options","result","tokenValue","replace","String","addSuffix","comparison","formatLong","date","_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__","formats","full","long","medium","short","defaultWidth","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","era","_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__","values","narrow","abbreviated","wide","quarter","argumentCallback","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","match","_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__","matchPattern","parsePattern","valueCallback","value","parseInt","_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__","matchPatterns","defaultMatchWidth","parsePatterns","any","defaultParseWidth","index","locale","code","formatDistance","_lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__","formatRelative","_lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__","_lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__","_lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}