{"version":3,"file":"static/chunks/82603.fafaaad47ebd15fc.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/bg/_lib/formatDistance/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/bg/_lib/formatLong/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/bg/_lib/formatRelative/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/bg/_lib/localize/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/bg/_lib/match/index.js","webpack://_N_E/../../node_modules/date-fns/esm/locale/bg/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'по-малко от секунда',\n    other: 'по-малко от {{count}} секунди'\n  },\n  xSeconds: {\n    one: '1 секунда',\n    other: '{{count}} секунди'\n  },\n  halfAMinute: 'половин минута',\n  lessThanXMinutes: {\n    one: 'по-малко от минута',\n    other: 'по-малко от {{count}} минути'\n  },\n  xMinutes: {\n    one: '1 минута',\n    other: '{{count}} минути'\n  },\n  aboutXHours: {\n    one: 'около час',\n    other: 'около {{count}} часа'\n  },\n  xHours: {\n    one: '1 час',\n    other: '{{count}} часа'\n  },\n  xDays: {\n    one: '1 ден',\n    other: '{{count}} дни'\n  },\n  aboutXWeeks: {\n    one: 'около седмица',\n    other: 'около {{count}} седмици'\n  },\n  xWeeks: {\n    one: '1 седмица',\n    other: '{{count}} седмици'\n  },\n  aboutXMonths: {\n    one: 'около месец',\n    other: 'около {{count}} месеца'\n  },\n  xMonths: {\n    one: '1 месец',\n    other: '{{count}} месеца'\n  },\n  aboutXYears: {\n    one: 'около година',\n    other: 'около {{count}} години'\n  },\n  xYears: {\n    one: '1 година',\n    other: '{{count}} години'\n  },\n  overXYears: {\n    one: 'над година',\n    other: 'над {{count}} години'\n  },\n  almostXYears: {\n    one: 'почти година',\n    other: 'почти {{count}} години'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'след ' + result;\n    } else {\n      return 'преди ' + result;\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, dd MMMM yyyy',\n  long: 'dd MMMM yyyy',\n  medium: 'dd MMM yyyy',\n  short: 'dd/MM/yyyy'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  any: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'any'\n  })\n};\nexport default formatLong;","import toDate from \"../../../../toDate/index.js\";\nimport isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\n// Adapted from the `ru` translation\n\nvar weekdays = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота'];\nfunction lastWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'миналата \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'миналия \" + weekday + \" в' p\";\n  }\n}\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n  if (day === 2 /* Tue */) {\n    return \"'във \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\nfunction nextWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следващата \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следващия \" + weekday + \" в' p\";\n  }\n}\nvar lastWeekFormatToken = function lastWeekFormatToken(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\nvar nextWeekFormatToken = function nextWeekFormatToken(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormatToken,\n  yesterday: \"'вчера в' p\",\n  today: \"'днес в' p\",\n  tomorrow: \"'утре в' p\",\n  nextWeek: nextWeekFormatToken,\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['пр.н.е.', 'н.е.'],\n  abbreviated: ['преди н. е.', 'н. е.'],\n  wide: ['преди новата ера', 'новата ера']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-во тримес.', '2-ро тримес.', '3-то тримес.', '4-то тримес.'],\n  wide: ['1-во тримесечие', '2-ро тримесечие', '3-то тримесечие', '4-то тримесечие']\n};\nvar monthValues = {\n  abbreviated: ['яну', 'фев', 'мар', 'апр', 'май', 'юни', 'юли', 'авг', 'сеп', 'окт', 'ное', 'дек'],\n  wide: ['януари', 'февруари', 'март', 'април', 'май', 'юни', 'юли', 'август', 'септември', 'октомври', 'ноември', 'декември']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  abbreviated: ['нед', 'пон', 'вто', 'сря', 'чет', 'пет', 'съб'],\n  wide: ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота']\n};\nvar dayPeriodValues = {\n  wide: {\n    am: 'преди обяд',\n    pm: 'след обяд',\n    midnight: 'в полунощ',\n    noon: 'на обяд',\n    morning: 'сутринта',\n    afternoon: 'следобед',\n    evening: 'вечерта',\n    night: 'през нощта'\n  }\n};\nfunction isFeminine(unit) {\n  return unit === 'year' || unit === 'week' || unit === 'minute' || unit === 'second';\n}\nfunction isNeuter(unit) {\n  return unit === 'quarter';\n}\nfunction numberWithSuffix(number, unit, masculine, feminine, neuter) {\n  var suffix = isNeuter(unit) ? neuter : isFeminine(unit) ? feminine : masculine;\n  return number + '-' + suffix;\n}\nvar ordinalNumber = function ordinalNumber(dirtyNumber, options) {\n  var number = Number(dirtyNumber);\n  var unit = options === null || options === void 0 ? void 0 : options.unit;\n  if (number === 0) {\n    return numberWithSuffix(0, unit, 'ев', 'ева', 'ево');\n  } else if (number % 1000 === 0) {\n    return numberWithSuffix(number, unit, 'ен', 'на', 'но');\n  } else if (number % 100 === 0) {\n    return numberWithSuffix(number, unit, 'тен', 'тна', 'тно');\n  }\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return numberWithSuffix(number, unit, 'ви', 'ва', 'во');\n      case 2:\n        return numberWithSuffix(number, unit, 'ри', 'ра', 'ро');\n      case 7:\n      case 8:\n        return numberWithSuffix(number, unit, 'ми', 'ма', 'мо');\n    }\n  }\n  return numberWithSuffix(number, unit, 'ти', 'та', 'то');\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?[врмт][аи]|-?т?(ен|на)|-?(ев|ева))?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((пр)?н\\.?\\s?е\\.?)/i,\n  abbreviated: /^((пр)?н\\.?\\s?е\\.?)/i,\n  wide: /^(преди новата ера|новата ера|нова ера)/i\n};\nvar parseEraPatterns = {\n  any: [/^п/i, /^н/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[врт]?o?)? тримес.?/i,\n  wide: /^[1234](-?[врт]?о?)? тримесечие/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[нпвсч]/i,\n  short: /^(нд|пн|вт|ср|чт|пт|сб)/i,\n  abbreviated: /^(нед|пон|вто|сря|чет|пет|съб)/i,\n  wide: /^(неделя|понеделник|вторник|сряда|четвъртък|петък|събота)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[ъб]/i]\n};\nvar matchMonthPatterns = {\n  abbreviated: /^(яну|фев|мар|апр|май|юни|юли|авг|сеп|окт|ное|дек)/i,\n  wide: /^(януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/i\n};\nvar parseMonthPatterns = {\n  any: [/^я/i, /^ф/i, /^мар/i, /^ап/i, /^май/i, /^юн/i, /^юл/i, /^ав/i, /^се/i, /^окт/i, /^но/i, /^де/i]\n};\nvar matchDayPeriodPatterns = {\n  any: /^(преди о|след о|в по|на о|през|веч|сут|следо)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^преди о/i,\n    pm: /^след о/i,\n    midnight: /^в пол/i,\n    noon: /^на об/i,\n    morning: /^сут/i,\n    afternoon: /^следо/i,\n    evening: /^веч/i,\n    night: /^през н/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Bulgarian locale.\n * @language Bulgarian\n * @iso-639-2 bul\n * @author Nikolay Stoynov [@arvigeus]{@link https://github.com/arvigeus}\n * @author Tsvetan Ovedenski [@fintara]{@link https://github.com/fintara}\n */\nvar locale = {\n  code: 'bg',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;"],"names":["isSameUTCWeek","dirtyDateLeft","dirtyDateRight","options","_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","dateLeftStartOfWeek","_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","dateRightStartOfWeek","getTime","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","__webpack_exports__","token","count","result","tokenValue","replace","String","addSuffix","comparison","formatLong","date","_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__","formats","full","long","medium","short","defaultWidth","time","dateTime","any","weekdays","thisWeek","day","weekday","formatRelativeLocale","lastWeek","dirtyDate","baseDate","_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__","getUTCDay","_lib_isSameUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__","yesterday","today","tomorrow","nextWeek","format","numberWithSuffix","number","unit","masculine","feminine","neuter","isNeuter","isFeminine","localize","ordinalNumber","dirtyNumber","Number","rem100","era","_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__","values","narrow","abbreviated","wide","quarter","argumentCallback","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","match","_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__","matchPattern","parsePattern","valueCallback","value","parseInt","_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","index","locale","code","formatDistance","_lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__","_lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__","formatRelative","_lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__","_lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__","_lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}